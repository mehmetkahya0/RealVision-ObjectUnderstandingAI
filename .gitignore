# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Machine Learning / AI specific
# Model files (but keep requirements to download them)
*.pt
*.pth
*.onnx
*.pb
*.h5
*.weights
*.caffemodel
*.prototxt
models/
checkpoints/

# YOLO/Ultralytics cache
.ultralytics/
yolo_cache/
wandb/

# Computer Vision specific
# Large video files
*.mp4
*.avi
*.mov
*.mkv
*.wmv
*.flv
*.webm
*.m4v
# Keep sample video if it's small
!sample_video.mp4

# Image files (screenshots, test images)
screenshots/*.jpg
screenshots/*.jpeg
screenshots/*.png
screenshots/*.bmp
screenshots/*.tiff
screenshots/*.gif
# Keep directory structure
!screenshots/.gitkeep

# Dataset directories
datasets/
data/
train/
val/
test/

# Logs and output files
logs/
*.log
output/
results/
runs/

# Configuration files with sensitive data
config_local.py
.env.local
secrets.json

# IDE and Editor files
# VSCode
.vscode/
# PyCharm
.idea/
# Sublime Text
*.sublime-project
*.sublime-workspace
# Vim
*.swp
*.swo
*~
# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc

# OS generated files
# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon?
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.tmp
*.temp
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# Application specific
# Temporary detection files
temp/
tmp/
cache/

# Performance profiling
*.prof
profile_results/

# Backup files
*.bak
*.backup
*.orig

# Compiled translations
*.mo

# Large data files
*.zip
*.tar.gz
*.rar
*.7z
# Exception for small sample files
!sample_data.zip

# Jupyter notebook checkpoints
.ipynb_checkpoints/

# Virtual environment directories
venv*/
.conda/
anaconda3/
miniconda3/

# Package manager files
node_modules/
yarn.lock
package-lock.json

# Documentation build
docs/build/
site/

# Coverage reports
htmlcov/
.coverage

# Local database files
*.db
*.sqlite

# Application logs
app.log
debug.log
error.log
